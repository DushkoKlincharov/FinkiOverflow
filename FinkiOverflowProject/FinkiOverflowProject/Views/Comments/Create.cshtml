@model FinkiOverflowProject.Models.Comment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(new { postId = Request.QueryString["postId"]}))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Comment</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Text, new { @class = "form-control question-text", rows = 5 })
            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.VotesUp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VotesUp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VotesUp, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.VotesDown, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VotesDown, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VotesDown, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.PostId, "PostId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PostId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
            </div>
        </div>*@




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back", "Details/"+ Request.QueryString["postId"], "Posts")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
