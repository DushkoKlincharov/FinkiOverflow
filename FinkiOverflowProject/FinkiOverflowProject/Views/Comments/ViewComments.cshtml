@using FinkiOverflowProject.Models
@model CommentsViewModel

<!-- Breadcrumbs-->
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        @Html.ActionLink("Home", "Index", "Posts", null, null)
    </li>
    <li class="breadcrumb-item active">Posts</li>
</ol>

<h2>
    @Model.PostTitle
</h2>
<hr />
<div class="row mb-5">
    <div class="col-1">
        <ul class="nav flex-column text-center">
            <li class="nav-item">
                <button type="button" class="btn btn-success js-upvote-post" data-post-id="@Model.PostId" data-student-id="@Model.StudentId">
                    <i class="fa fa-thumbs-up fas"></i>
                </button>
            </li>
            <li class="nav-item py-2">
                <span class="text-muted" style="font-size: 26px;" data-post-votes="@Model.PostVotes">@Model.PostVotes</span>
            </li>
            <li class="nav-item">
                <button type="button" class="btn btn-danger js-downvote-post" data-post-id="@Model.PostId" data-student-id="@Model.StudentId">
                    <i class="fa fa-thumbs-down fas"></i>
                </button>
            </li>
        </ul>
    </div>
    <div class="col-9">
        <p>
            @Model.PostText
        </p>
        <a href="@Url.Action("ViewPostsForSubject", "Posts", new { id = Model.SubjectId })"><small class="text-muted" title="Top subject">@Model.SubjectName</small></a>
    </div>
    <div class="col-2 mt-auto">
        <small class="mt-0 text-muted">
            @{
                System.TimeSpan totalTime = DateTime.Now.Subtract(Model.TimeAsked);
                int timePassed = (int)totalTime.TotalSeconds;
                string time = "seconds";
                if (timePassed == 1)
                {
                    time = "seconds";
                }
                else if (timePassed > 59)
                {
                    timePassed = (int)totalTime.TotalMinutes;
                    if (timePassed > 59)
                    {
                        timePassed = (int)totalTime.TotalHours;
                        if (timePassed > 23)
                        {
                            timePassed = (int)totalTime.TotalDays;
                            if (timePassed == 1)
                            {
                                time = "day";
                            }
                            else
                            {
                                time = "days";
                            }
                        }
                        else
                        {
                            if (timePassed == 1)
                            {
                                time = "hour";
                            }
                            else
                            {
                                time = "hours";
                            }
                        }
                    }
                    else
                    {
                        if (timePassed == 1)
                        {
                            time = "minute";
                        }
                        else
                        {
                            time = "minutes";
                        }
                    }
                }

            }
            asked @timePassed @time ago
        </small>
        <div class="media">
            <img src="@Model.StudentImageUrl" alt="Generic placeholder image" style="width:32px;height:32px;">
            <div class="media-body ml-1">
                <small>
                    @Html.ActionLink(Model.StudentFirstName + " " + Model.StudentLastName, "ViewStudent", "Students", new { id = Model.StudentId }, null)
                </small>
            </div>
        </div>
    </div>
</div>
<hr />
<h3>
    @if (Model.PostAnswers == 1)
    {<span>1 Answer</span>}
    else
    { <span>@Model.PostAnswers Answers</span>}
</h3>
<hr />
@{
    foreach (CommentViewModel m in Model.Comments)
    {
        <div class="row mb-4">
            <div class="col-1">
                <ul class="nav flex-column text-center">
                    <li class="nav-item">
                        <button type="button" class="btn btn-success js-upvote-comment" data-comment-id="@m.CommentId" data-student-id="@m.StudentId">
                            <i class="fa fa-thumbs-up fas"></i>
                        </button>
                    </li>
                    <li class="nav-item py-2">
                        <span class="text-muted" style="font-size: 26px;" data-comment-votes="@(m.VotesUp - m.VotesDown)" data-comment-id="@m.CommentId">@(m.VotesUp - m.VotesDown)</span>
                    </li>
                    <li class="nav-item">
                        <button type="button" class="btn btn-danger js-downvote-comment" data-comment-id="@m.CommentId" data-student-id="@m.StudentId">
                            <i class="fa fa-thumbs-down fas"></i>
                        </button>
                    </li>
                </ul>
            </div>
            <div class="col-9">

                <p class="text-justify">
                    @m.CommentBody
                </p>

            </div>
            <div class="col-2 mt-auto">
                <small class="mt-0 text-muted">
                    @{
                        totalTime = DateTime.Now.Subtract(m.TimeAnswered);
                        timePassed = (int)totalTime.TotalSeconds;
                        time = "seconds";
                        if (timePassed == 1)
                        {
                            time = "seconds";
                        }
                        else if (timePassed > 59)
                        {
                            timePassed = (int)totalTime.TotalMinutes;
                            if (timePassed > 59)
                            {
                                timePassed = (int)totalTime.TotalHours;
                                if (timePassed > 23)
                                {
                                    timePassed = (int)totalTime.TotalDays;
                                    if (timePassed == 1)
                                    {
                                        time = "day";
                                    }
                                    else
                                    {
                                        time = "days";
                                    }
                                }
                                else
                                {
                                    if (timePassed == 1)
                                    {
                                        time = "hour";
                                    }
                                    else
                                    {
                                        time = "hours";
                                    }
                                }
                            }
                            else
                            {
                                if (timePassed == 1)
                                {
                                    time = "minute";
                                }
                                else
                                {
                                    time = "minutes";
                                }
                            }
                        }

                    }
                    answered @timePassed @time ago
                </small>
                <div class="media">
                    <img src="@m.ImageUrl" alt="Generic placeholder image" style="width:32px;height:32px;">
                    <div class="media-body ml-1">
                        <small>@Html.ActionLink(m.StudentFirstName + " " + m.StudentLastName, "ViewStudent", "Students", new { id = m.StudentId }, null)</small>
                    </div>
                </div>
            </div>
        </div>
        <hr />
    }
}
<h3>Your answer</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.NewCommentText, new { @class = "form-control js-answer", rows = "5" })
                @Html.ValidationMessageFor(model => model.NewCommentText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Post your answer" class="btn btn-primary js-post-answer"/>
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => m.PostId)
    @Html.HiddenFor(m => m.CurrentStudentId)
}

<!-- The Modal -->
<div class="modal hide" id="loginModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Thanks for the feedback!</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                Setting up an account is free and open to everyone. Set up your account today and earn extra privileges like posting, commenting and voting.
            </div>

            <!-- Modal footer -->
            <div class="modal-footer text-center">
                <a class="d-block btn btn-primary" href="@Url.Action("Login","Account")">Sign in</a>
                <a class="d-block btn btn-primary" href="@Url.Action("Register","Account")">Register</a>
            </div>

        </div>
    </div>
</div>

@section scripts{
    <script>
        

        $(document).ready(function () {

            var loginModal = $("#loginModal");
            var isUserLoggedIn = @Json.Encode(Model.isUserLoggedIn);
            

            @{
                if (!ViewData.ModelState.IsValid)
                {
                    if (ViewData.ModelState.Keys.Contains("User"))
                    {
                        if (ViewData.ModelState["User"].Errors.Count > 0)
                        {
                            <text>loginModal.modal('show');</text>
                        }
                    }
                }
            }

            $(".js-upvote-post").on("click", function () {
                var button = $(this);
                if (isUserLoggedIn) {

                    var studentId = @Json.Encode(Model.CurrentStudentId);

                    $.ajax({
                        method: "GET",
                        url: "/api/StudentPostsApi/GetVoted/" + studentId + "/" + button.attr("data-post-id"),
                        success: function (data) {
                            if (data.Voted == true) {
                                alert("You already voted. Thanks for your feedback!");
                            } else {
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/PostsApi/UpvotePost/" + button.attr("data-post-id"),
                                    success: function () {
                                        var voteSpan = $("span[data-post-votes]");
                                        var votes = parseInt(voteSpan.text());
                                        ++votes;
                                        voteSpan.html(votes);
                                    }
                                });
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/StudentPostsApi/SetVoted/" + studentId + "/" + button.attr("data-post-id")
                                });
                                setTimeout(function () {
                                    //wait 3 seconds
                                }, 3000);
                            }
                        }
                    });
                } else {
                    loginModal.modal('show');
                }
            });

            $(".js-downvote-post").on("click", function () {
                var button = $(this);
                if (isUserLoggedIn) {

                    var studentId = @Json.Encode(Model.CurrentStudentId);

                    $.ajax({
                        method: "GET",
                        url: "/api/StudentPostsApi/GetVoted/" + studentId + "/" + button.attr("data-post-id"),
                        success: function (data) {
                            if (data.Voted == true) {
                                alert("You already voted. Thanks for your feedback!");
                            } else {
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/PostsApi/DownvotePost/" + button.attr("data-post-id"),
                                    success: function () {
                                        var voteSpan = $("span[data-post-votes]");
                                        var votes = parseInt(voteSpan.text());
                                        --votes;
                                        voteSpan.html(votes);
                                    }
                                });
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/StudentPostsApi/SetVoted/" + studentId + "/" + button.attr("data-post-id")
                                });
                                setTimeout(function () {
                                    //wait 3 seconds
                                }, 3000);
                            }
                        }
                    });
                } else {
                    loginModal.modal('show');
                }
            });

            $(".js-upvote-comment").on("click", function () {
                var button = $(this);
                if (isUserLoggedIn) {

                    var studentId = @Json.Encode(Model.CurrentStudentId);

                    $.ajax({
                        method: "GET",
                        url: "/api/StudentCommentsApi/GetVoted/" + studentId + "/" + button.attr("data-comment-id"),
                        success: function (data) {
                            if (data.Voted == true) {
                                alert("You already voted. Thanks for your feedback!");
                            } else {
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/CommentsApi/UpvoteComment/" + button.attr("data-comment-id"),
                                    success: function () {
                                        var voteSpan = $("span[data-comment-id=" + button.attr("data-comment-id") + "]");
                                        var votes = parseInt(voteSpan.text());
                                        ++votes;
                                        voteSpan.html(votes);
                                    }
                                });
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/StudentCommentsApi/SetVoted/" + studentId + "/" + button.attr("data-comment-id")
                                });
                                setTimeout(function () {
                                    //wait 3 seconds
                                }, 3000);
                            }
                        }
                    });
                } else {
                    loginModal.modal('show');
                }
            });

            $(".js-downvote-comment").on("click", function () {
                var button = $(this);
                if (isUserLoggedIn) {

                    var studentId = @Json.Encode(Model.CurrentStudentId);

                    $.ajax({
                        method: "GET",
                        url: "/api/StudentCommentsApi/GetVoted/" + studentId + "/" + button.attr("data-comment-id"),
                        success: function (data) {
                            if (data.Voted == true) {
                                alert("You already voted. Thanks for your feedback!");
                            } else {
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/CommentsApi/DownvoteComment/" + button.attr("data-comment-id"),
                                    success: function () {
                                        var voteSpan = $("span[data-comment-id=" + button.attr("data-comment-id") + "]");
                                        var votes = parseInt(voteSpan.text());
                                        --votes;
                                        voteSpan.html(votes);
                                    }
                                });
                                $.ajax({
                                    method: "PUT",
                                    url: "/api/StudentCommentsApi/SetVoted/" + studentId + "/" + button.attr("data-comment-id")
                                });
                                setTimeout(function () {
                                    //wait 3 seconds
                                }, 3000);
                            }
                        }
                    });
                } else {
                    loginModal.modal('show');
                }
            });
        });
    </script>
}


